RTC_Spider2020_Crawler - 日本語
=======================


はじめに
========

クラスについては、 `APIドキュメンテーション`_ に参照してください。

.. _`APIドキュメンテーション`:
   doxygen/html/index.html

条件
====

RTC_Spider2020_CrawlerはOpenRTM-aist 1.0.0以上のC++版が必要です。

RTC_Spider2020_Crawlerは CMake_ を使います。CMake 2.8以上が必要です。

.. _CMAke:
   http://www.cmake.org

インストール
============

インストーラ
------------

Windowsのユーザはインストーラパッケージを使用してコンポーネントをインストール
することができます。これはコンポーネント及びそのすべての必要なライブラリを
インストールします。Windowsでインストールする場合、インストーラの使用を推奨してます。

- インストーラをダウンロードしてください。
- インストールを始めるためにインストーラをダブルクリックしてください。
- 指示にしたがってコンポーネントをインストールしてください。
- 環境変数の変更を適用するため、コンポーネントを使用する前にコンピューターを
  再起動する必要があるかもしれません。

RTC_Spider2020_Crawlerは ``RTC_Spider2020_CrawlerComp`` の実行をダブルクリックして実行することが
できます。あるいは、 ``RTC_Spider2020_Crawler`` を初期化関数の ``RTC_Spider2020_CrawlerInit`` を利用して、
マネージャにロードすることができます。

ソースから
----------

ソースを使う場合は以下の手順でインストールしてください。

- ソースをダウンロードして解凍してください::

    tar -xvzf RTC_Spider2020_Crawler-2.0.0.tar.gz

- 解凍されたフォルダに入ってください::

    cd RTC_Spider2020_Crawler-2.0.0

- ``build`` フォルダを作ってください::

    mkdir build

- `` build`` フォルダに入ってください::

    cd build

- CMakeを実行してください::

    cmake ../

- エラーが出無い場合、makeを実行してください::

    make

- ``make install`` でコンポーネントをインストールしてください。選択された
  インストール場所に書き込み権限があるかを確認してください::

  ``make install``

- インストールする場所はccmakeを実行して ``CMAKE_INSTALL_PREFIX`` を
  設定することで変更が可能です。

    ccmake ../

ここまでで、コンポーネントが使えるようになりました。コンフィグレーションは次のセクションを
参照してください。

RTC_Spider2020_Crawlerは ``RTC_Spider2020_CrawlerComp`` を実行（ ``${prefix}/components/bin`` に
インストールされます）することでスタンドアローンモードで実行することができます。
あるいは、 ``libRTC_Spider2020_Crawler.so`` を初期化関数の ``RTC_Spider2020_CrawlerInit`` を利用して、
マネージャにロードすることができます。このライブラリは ``${prefix}/components/lib``
または ``${prefix}/components/lib64`` にインストールされます。


コンフィグレーション
====================

使えるコンフィグレーションパラメータは以下のテーブルを参照
してください。

================ ================== ================ ====
パラメータ       データ型           デフォルト値     意味
================ ================== ================ ====
WHEEL_RADIUS     double             0.0769           Wheel Radius
PULLEY_RADIUS    double             0.0486           Pulley Radius
TURNING_RADIUS   double             0.0938           Turning Radius
SH1_DEVICE_NAME  string             /dev/ttyUSB0     メインモータを制御するマイコンのデバイス名
SH2_DEVICE_NAME  string             /dev/ttyUSB1     前方サブモータを制御するマイコンのデバイス名
SH3_DEVICE_NAME  string             /dev/ttyUSB2     後方サブモータを制御するマイコンのデバイス名
SH1_BAUDRATE     string             B38400           メインモータを制御するマイコンとの伝送速度
SH2_BAUDRATE     string             B38400           前方サブモータを制御するマイコンとの伝送速度
SH3_BAUDRATE     string             B38400           後方サブモータを制御するマイコンとの伝送速度
MAIN_MOTOR_KP    double             0.42             メインモータのPID速度制御の比例ゲイン
MAIN_MOTOR_KI    double             4.00             メインモータのPID速度制御の積分ゲイン
MAIN_MOTOR_KD    double             0.02             メインモータのPID速度制御の微分ゲイン
VX_GAIN          double             1.000            オドメトリの並進距離を実測に近づけるための係数
VA_GAIN          double             1.000            オドメトリの旋回を実測に近づけるための係数
MAIN_MOTOR_PULSE long               1000             1000 = 500(パルス) x 2(逓倍) ※位相計数モード4
MAIN_MOTOR_GEAR_RATIO double             243              メインモータの減速比
SUB_MOTOR_PULSE  long               512              512 = 256(パルス) x 2(逓倍) ※位相計数モード4
SUB_MOTOR_GEAR_RATIO double             1080.0           サブモータの減速比
R_MAIN_MOTOR_DIRECTION long               1                右メインモータの回転方向(1:正回転、-1:負回転)
L_MAIN_MOTOR_DIRECTION long               1                左メインモータの回転方向(1:正回転、-1:負回転)
R_FRONT_SUB_MOTOR_DIRECTION long               1                右前方モータの回転方向(1:正回転、-1:負回転)
L_FRONT_SUB_MOTOR_DIRECTION long               1                左前方モータの回転方向(1:正回転、-1:負回転)
R_BACK_SUB_MOTOR_DIRECTION long               1                右後方モータの回転方向(1:正回転、-1:負回転)
L_BACK_SUB_MOTOR_DIRECTION long               1                左後方モータの回転方向(1:正回転、-1:負回転)
MAIN_MOTOR_LOAD_GAIN double             7.5              メインモータの電圧値をモータ負荷に変換するゲイン
MAIN_MOTOR_LOAD_BASE double             2.0              メインモータの電圧値の基準値
SUB_MOTOR_LOAD_GAIN double             7.5              サブモータの電圧値をモータ負荷に変換するゲイン
SUB_MOTOR_LOAD_BASE double             2.0              サブモータの電圧値の基準値
FAILSAFE_SEC     double             1.0              入力ポートへ指定時間以上新しい入力がなければ、<br/>暴走を回避するため入力データのクリアなどを実施する。
USE_ORIENTATION3D_IN long               0                0: オドメトリの処理に外部観測した３次元の姿勢を使用しない。<br/>1: オドメトリの処理に外部観測した３次元の姿勢を使用する。
================ ================== ================ ====

ポート
======

コンポーネントによって提供されるポートは以下のテーブルで述べられています。

=============== =========== ============================== ====
ポート名        ポート型    データ型                       意味
=============== =========== ============================== ====
Mode_In         InPort      RTC::TimedLongSeq              動作指令の状態
Velocity2D_In   InPort      RTC::TimedVelocity2D           ２次元の速度
FlipperPwm_In   InPort      RTC::TimedLongSeq              フリッパーのPWM指令
Orientation3D_In InPort      RTC::TimedOrientation3D        外部観測した３次元の姿勢
Pose3D_Out      OutPort     RTC::TimedPose3D               オドメトリによる３次元の位置・姿勢
Velocity2D_Out  OutPort     RTC::TimedVelocity2D           ２次元の速度
FlipperAngle_Out OutPort     RTC::TimedDoubleSeq            フリッパーの角度
MotorLoad_Out   OutPort     RTC::TimedDoubleSeq            各モータの負荷
=============== =========== ============================== ====

例
==

例のrtc.confファイルは ``${prefix}/components/share/RTC_Spider2020_Crawler/examples/conf/``
フォルダにインストールされています。

Changelog
=========


License
=======

このソフトウェアは産業技術総合研究所で開発されています。承認番号はH23PRO-????
です。このソフトウェアは Lesser General Public License (LGPL) ライセンスとして
公開されてます。COPYING.LESSER を参照してください。
